name: Core

on:
  workflow_dispatch:
    inputs:
      post_telegram:
        description: 'Post to Telegram'
        required: false
        type: boolean
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
  merge_group:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_BASEDIR: "${{ github.workspace }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Write key
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/master' ) || github.ref_type == 'tag' }}
        run: |
          if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
            echo androidStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties
            echo androidKeyAlias='${{ secrets.ALIAS }}' >> gradle.properties
            echo androidKeyPassword='${{ secrets.KEY_PASSWORD }}' >> gradle.properties
            echo androidStoreFile='key.jks' >> gradle.properties
            echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks
          fi

      - name: Checkout libxposed/api
        uses: actions/checkout@v4
        with:
          repository: libxposed/api
          path: libxposed/api

      - name: Checkout libxposed/service
        uses: actions/checkout@v4
        with:
          repository: libxposed/service
          path: libxposed/service

      - name: Checkout libxposed/interface
        uses: actions/checkout@v4
        with:
          repository: libxposed/interface
          path: libxposed/interface

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          key: ${{ runner.os }}
          restore-keys: ${{ runner.os }}
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

      - name: Build dependencies
        working-directory: libxposed
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          echo 'org.gradle.caching=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.parallel=true' >> ~/.gradle/gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 -XX:+UseParallelGC' >> ~/.gradle/gradle.properties
          echo 'android.native.buildOutput=verbose' >> ~/.gradle/gradle.properties
          echo 'kotlin.jvm.target.validation.mode=warning' >> ~/.gradle/gradle.properties
          echo "org.gradle.java.home=$JAVA_HOME" >> ~/.gradle/gradle.properties
          echo "Build using Java: $JAVA_HOME"
          java -version
          echo "Building libxposed/api..."
          cd api
          if ./gradlew publishToMavenLocal -Pkotlin.jvm.target.validation.mode=warning --info; then
            echo "✓ libxposed/api build successful"
          else
            echo "✗ libxposed/api build failed"
            exit 1
          fi
          
          echo "Building libxposed/interface..."
          cd ../interface
          if ./gradlew publishToMavenLocal -Pkotlin.jvm.target.validation.mode=warning --info; then
            echo "✓ libxposed/interface build successful"
          else
            echo "✗ libxposed/interface build failed"
            exit 1
          fi
          
          echo "Building libxposed/service..."
          cd ../service
          if ./gradlew publishToMavenLocal -Pkotlin.jvm.target.validation.mode=warning --info; then
            echo "✓ libxposed/service build successful"
          else
            echo "✗ libxposed/service build failed"
            exit 1
          fi

      - name: Verify dependencies
        run: |
          echo "Checking Maven local repository for libxposed dependencies..."
          ls -la ~/.m2/repository/io/github/libxposed/ || echo "No libxposed artifacts found"
          if [ -d ~/.m2/repository/io/github/libxposed/api/100 ]; then
            echo "✓ libxposed:api:100 found"
          else
            echo "✗ libxposed:api:100 missing"
          fi
          if [ -d ~/.m2/repository/io/github/libxposed/interface/100 ]; then
            echo "✓ libxposed:interface:100 found"
          else
            echo "✗ libxposed:interface:100 missing"
          fi
          if [ -d ~/.m2/repository/io/github/libxposed/service/100 ]; then
            echo "✓ libxposed:service:100 found"
          else
            echo "✗ libxposed:service:100 missing"
          fi

      - name: Build with Gradle
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          echo "Using Java: $JAVA_HOME"
          java -version
          ./gradlew zipAll -Porg.gradle.java.home=$JAVA_HOME

      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          riruReleaseName=`ls magisk-loader/release/LSPosed-v*-riru-release.zip | awk -F '(/|.zip)' '{print $3}'` && echo "riruReleaseName=$riruReleaseName" >> $GITHUB_OUTPUT
          riruDebugName=`ls magisk-loader/release/LSPosed-v*-riru-debug.zip | awk -F '(/|.zip)' '{print $3}'` && echo "riruDebugName=$riruDebugName" >> $GITHUB_OUTPUT
          zygiskReleaseName=`ls magisk-loader/release/LSPosed-v*-zygisk-release.zip | awk -F '(/|.zip)' '{print $3}'` && echo "zygiskReleaseName=$zygiskReleaseName" >> $GITHUB_OUTPUT
          zygiskDebugName=`ls magisk-loader/release/LSPosed-v*-zygisk-debug.zip | awk -F '(/|.zip)' '{print $3}'` && echo "zygiskDebugName=$zygiskDebugName" >> $GITHUB_OUTPUT
          unzip magisk-loader/release/LSPosed-v*-riru-release.zip -d LSPosed-riru-release
          unzip magisk-loader/release/LSPosed-v*-riru-debug.zip -d LSPosed-riru-debug
          unzip magisk-loader/release/LSPosed-v*-zygisk-release.zip -d LSPosed-zygisk-release
          unzip magisk-loader/release/LSPosed-v*-zygisk-debug.zip -d LSPosed-zygisk-debug

      - name: Upload riru release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruReleaseName }}
          path: "./LSPosed-riru-release/*"

      - name: Upload riru debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.riruDebugName }}
          path: "./LSPosed-riru-debug/*"

      - name: Upload zygisk release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskReleaseName }}
          path: "./LSPosed-zygisk-release/*"

      - name: Upload zygisk debug
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskDebugName }}
          path: "./LSPosed-zygisk-debug/*"

      - name: Upload mappings
        uses: actions/upload-artifact@v4
        with:
          name: mappings
          path: |
            magisk-loader/build/outputs/mapping
            app/build/outputs/mapping

      - name: Upload symbols
        uses: actions/upload-artifact@v4
        with:
          name: symbols
          path: build/symbols

      - name: Post to channel
        if: ${{ success() && github.event_name != 'pull_request' && github.ref == 'refs/heads/master' && github.ref_type != 'tag' && inputs.post_telegram != 'false' }}
        env:
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          DISCUSSION_ID: ${{ secrets.DISCUSSION_ID }}
          TOPIC_ID: ${{ secrets.TOPIC_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            OUTPUT="magisk-loader/release/"
            export riruRelease=$(find $OUTPUT -name "LSPosed-v*-riru-release.zip")
            export riruDebug=$(find $OUTPUT -name "LSPosed-v*-riru-debug.zip")
            export zygiskRelease=$(find $OUTPUT -name "LSPosed-v*-zygisk-release.zip")
            export zygiskDebug=$(find $OUTPUT -name "LSPosed-v*-zygisk-debug.zip")
            ESCAPED=`python3 -c 'import json,os,urllib.parse; msg = json.dumps(os.environ["COMMIT_MESSAGE"]); print(urllib.parse.quote(msg if len(msg) <= 1024 else json.dumps(os.environ["COMMIT_URL"])))'`
          fi
